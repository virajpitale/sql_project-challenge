-- Query 1: Retrieve distinct markets for customer 'Atliq Exclusive' in the APAC region
SELECT DISTINCT market
FROM dim_customer
WHERE customer = 'Atliq Exclusive' AND region = 'APAC';

-- Query 2: Calculate unique product counts and percentage change from 2020 to 2021
WITH product_counts AS (
    SELECT
        fiscal_year,
        COUNT(DISTINCT product_code) AS unique_products
    FROM
        fact_sales_monthly
    WHERE
        fiscal_year IN (2020, 2021)
    GROUP BY
        fiscal_year
)

SELECT
    pc2020.unique_products AS unique_products_2020,
    pc2021.unique_products AS unique_products_2021,
    ROUND(((pc2021.unique_products - pc2020.unique_products) * 100.0 / NULLIF(pc2020.unique_products, 0)), 2) AS percentage_chg
FROM
    product_counts pc2020
    JOIN product_counts pc2021 ON pc2020.fiscal_year = 2020 AND pc2021.fiscal_year = 2021;

-- Query 3: Calculate product counts by segment
SELECT
    segment,
    COUNT(DISTINCT product_code) AS product_count
FROM
    dim_product
GROUP BY
    segment
ORDER BY
    product_count DESC;

-- Query 4: Calculate product counts and difference between 2020 and 2021 by segment
WITH product_counts AS (
    SELECT
        dp.segment,
        COUNT(DISTINCT CASE WHEN fsm.fiscal_year = 2020 THEN fsm.product_code END) AS product_count_2020,
        COUNT(DISTINCT CASE WHEN fsm.fiscal_year = 2021 THEN fsm.product_code END) AS product_count_2021
    FROM
        dim_product dp
        LEFT JOIN fact_sales_monthly fsm ON dp.product_code = fsm.product_code
    WHERE
        fsm.fiscal_year IN (2020, 2021)
    GROUP BY
        dp.segment
)

SELECT
    pc.segment,
    pc.product_count_2020,
    pc.product_count_2021,
    pc.product_count_2021 - pc.product_count_2020 AS difference
FROM
    product_counts pc
ORDER BY
    difference DESC;

-- Query 5: Retrieve products with highest and lowest manufacturing costs
WITH highest_lowest_costs AS (
    SELECT
        MAX(manufacturing_cost) AS max_cost,
        MIN(manufacturing_cost) AS min_cost
    FROM
        fact_manufacturing_cost
)

SELECT
    fmc.product_code,
    dp.product,
    fmc.manufacturing_cost
FROM
    fact_manufacturing_cost fmc
    JOIN dim_product dp ON fmc.product_code = dp.product_code
    JOIN highest_lowest_costs hlc ON fmc.manufacturing_cost = hlc.max_cost
                                   OR fmc.manufacturing_cost = hlc.min_cost;

-- Query 6: Calculate average discount percentage for top customers in India in 2021
SELECT
    dc.customer_code,
    dc.customer,
    AVG(fpid.pre_invoice_discount_pct) AS average_discount_percentage
FROM
    fact_pre_invoice_deductions fpid
    JOIN dim_customer dc ON fpid.customer_code = dc.customer_code
WHERE
    fpid.fiscal_year = 2021
    AND dc.market = 'India'
GROUP BY
    dc.customer_code, dc.customer
ORDER BY
    average_discount_percentage DESC
LIMIT 5;

-- Query 7: Calculate gross sales amount by month in 2021 for customer 'Atliq Exclusive'
SELECT
    CONCAT(mm.month_name, ' (', EXTRACT(YEAR FROM fsm.date), ')') AS Month_Year,
    ROUND(SUM(fgp.gross_price * fsm.sold_quantity), 2) AS Gross_sales_amount
FROM
    fact_sales_monthly fsm
    JOIN dim_customer dc ON fsm.customer_code = dc.customer_code
    JOIN fact_gross_price fgp ON fsm.product_code = fgp.product_code
    JOIN (
        SELECT 1 AS month_number, 'January' AS month_name UNION ALL
        SELECT 2, 'February' UNION ALL
        SELECT 3, 'March' UNION ALL
        SELECT 4, 'April' UNION ALL
        SELECT 5, 'May' UNION ALL
        SELECT 6, 'June' UNION ALL
        SELECT 7, 'July' UNION ALL
        SELECT 8, 'August' UNION ALL
        SELECT 9, 'September' UNION ALL
        SELECT 10, 'October' UNION ALL
        SELECT 11, 'November' UNION ALL
        SELECT 12, 'December'
    ) mm ON EXTRACT(month FROM fsm.date) = mm.month_number
WHERE
    dc.customer = 'Atliq Exclusive'
GROUP BY
    mm.month_name,
    EXTRACT(YEAR FROM fsm.date),
    fsm.date
ORDER BY
    EXTRACT(YEAR FROM fsm.date), MIN(EXTRACT(month FROM fsm.date));

-- Query 8: Calculate total sold quantity by quarter in 2020
WITH quarterly_sales AS (
    SELECT
        CASE
            WHEN EXTRACT(month FROM fsm.date) IN (9, 10, 11) THEN 'Q1'
            WHEN EXTRACT(month FROM fsm.date) IN (12, 1, 2) THEN 'Q2'
            WHEN EXTRACT(month FROM fsm.date) IN (3, 4, 5) THEN 'Q3'
            WHEN EXTRACT(month FROM fsm.date) IN (6, 7, 8) THEN 'Q4'
        END AS Quarter,
        SUM(fsm.sold_quantity) AS total_sold_quantity
    FROM
        fact_sales_monthly fsm
    WHERE
        EXTRACT(year FROM fsm.date) = 2020
    GROUP BY
        Quarter
)

SELECT
    Quarter,
    total_sold_quantity
FROM
    quarterly_sales
ORDER BY
    total_sold_quantity DESC;

-- Query 9: Calculate channel contributions to gross sales in 2021
WITH Output AS (
    SELECT
        dc.channel AS channel,
        ROUND(SUM(fgp.gross_price * fsm.sold_quantity) / 1000000, 2) AS Gross_sales_mln
    FROM
        fact_sales_monthly fsm
        JOIN dim_customer dc ON fsm.customer_code = dc.customer_code
        JOIN fact_gross_price fgp ON fsm.product_code = fgp.product_code
    WHERE
        EXTRACT(year FROM fsm.date) = 2021
    GROUP BY
        dc.channel
)

SELECT
    channel,
    Gross_sales_mln,
    ROUND((Gross_sales_mln / total.total_gross_sales_mln) * 100, 2) AS percentage
FROM
    Output,
    (SELECT SUM(Gross_sales_mln) AS total_gross_sales_mln FROM Output) AS total
ORDER BY
    percentage DESC;

-- Query 10: Identify top 3 products by division with highest total sold quantity in 2021
WITH ranked_products AS (
    SELECT
        dp.division,
        fsm.product_code,
        dp.product,
        SUM(fsm.sold_quantity) AS total_sold_quantity,
        RANK() OVER (PARTITION BY dp.division ORDER BY SUM(fsm.sold_quantity) DESC) AS rank_order
    FROM
        fact_sales_monthly fsm
        JOIN dim_product dp ON fsm.product_code = dp.product_code
    WHERE
        fsm.fiscal_year = 2021
    GROUP BY
        dp.division, fsm.product_code, dp.product
)

SELECT
    division,
    product_code,
    product,
    total_sold_quantity,
    rank_order
FROM
    ranked_products
WHERE
    rank_order <= 3
ORDER BY
    division, rank_order;
